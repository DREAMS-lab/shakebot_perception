<!-- This launch file will start the camera and publish the raw camera image along with rectified image provided the camera is calibrated.
Moreover, it will also start the april tag detection node to detect the april tags and publish its tf. 
In addition, will create a node for imu and will start the imu_pub publisher to publish the imu data. -->

<launch>

	<!-- This section is for point grey camera node -->

   	<!-- Determine this using rosrun pointgrey_camera_driver list_cameras.
       If not specified, defaults to first camera found. -->
	<arg name="camera_name" default="camera" />
	<arg name="camera_serial" default="0" />
	<arg name="calibrated" default="0" />

	<group ns="$(arg camera_name)">
		<!-- uncomment the line below and select "camera" as fixed frame in order to view tags in rviz -->
		<node pkg="tf" type="static_transform_publisher" name="map2camera" args="0 0 0 0 0 0 1 map camera 10" />

		<node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

		<node pkg="nodelet" type="nodelet" name="camera_nodelet"
			args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
		<param name="frame_id" value="camera" />
		<param name="serial" value="$(arg camera_serial)" />

		<!-- When unspecified, the driver will use the default framerate as given by the
			camera itself. Use this parameter to override that value for cameras capable of
			other framerates. -->
		<!-- <param name="frame_rate" value="15" /> -->

		<!-- Use the camera_calibration package to create this file -->
		<param name="camera_info_url" if="$(arg calibrated)"
			value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
		</node>

		<node pkg="nodelet" type="nodelet" name="image_proc_debayer"
			args="load image_proc/debayer camera_nodelet_manager" >
		</node>

		<node pkg="image_proc" type="image_proc" name="camera_processor" />
	</group>

	<!-- point grey camera node section ends -->

	<!-- This section is for april tag detection -->
	<group ns="apriltag_detection">
		<arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
		<arg name="node_namespace" default="apriltag_ros_continuous_node" />
		<arg name="detection_camera_name" default="/camera" />
		<arg name="image_topic" default="image_rect_color" />

		<!-- Set parameters -->
		<rosparam command="load" file="$(find shakebot_perception)/config/settings.yaml" ns="$(arg node_namespace)" />
		<rosparam command="load" file="$(find shakebot_perception)/config/tags.yaml" ns="$(arg node_namespace)" />
	
		<node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
		<!-- Remap topics from those used in code to those on the ROS network -->
		<remap from="image_rect" to="$(arg detection_camera_name)/$(arg image_topic)" />
		<remap from="camera_info" to="$(arg detection_camera_name)/camera_info" />
		<param name="publish_tag_detections_image" type="bool" value="true" />      <!-- default: false -->
		</node>
	</group>
	<!-- April tag detection section ends -->

	<!-- This section is for imu -->
	<group ns="imu_sensor">
		<node pkg="shakebot_perception" name="shakebot_perception_imu" type="imu_pub" required="true" />
	</group>

	<node pkg="tf" type="static_transform_publisher" name="map2HWT905" args="0 0 0 0 0 0 1 map HWT905 10" />

	<!-- The imu section ends -->

</launch>